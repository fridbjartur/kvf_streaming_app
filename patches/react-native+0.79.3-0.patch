diff --git a/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.h b/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.h
index 99b187c..c6f99e2 100644
--- a/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.h
+++ b/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.h
@@ -24,4 +24,9 @@ NS_ASSUME_NONNULL_BEGIN
 
 @end
 
+
+@interface RCTTVRemoteSelectGestureRecognizer: UILongPressGestureRecognizer
+
+@end
+
 NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m b/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m
index 8245419..97cca30 100644
--- a/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m
+++ b/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m
@@ -1,16 +1,17 @@
 #import "RCTTVRemoteSelectHandler.h"
+#import "RCTTVRemoteHandler.h"
 
 @interface RCTTVRemoteSelectHandler()
 
-@property (nonatomic, strong) UILongPressGestureRecognizer * pressRecognizer;
-@property (nonatomic, strong) UILongPressGestureRecognizer * longPressRecognizer;
+@property (nonatomic, strong) RCTTVRemoteSelectGestureRecognizer * pressRecognizer;
+@property (nonatomic, strong) RCTTVRemoteSelectGestureRecognizer * longPressRecognizer;
 
 @property (nonatomic, weak) UIView<RCTTVRemoteSelectHandlerDelegate> *view;
 
 @end
 
 @implementation RCTTVRemoteSelectHandler {
-  NSMutableDictionary<NSString *, UIGestureRecognizer *> *_tvRemoteGestureRecognizers;
+  NSMutableDictionary<NSString *, RCTTVRemoteSelectGestureRecognizer *> *_tvRemoteGestureRecognizers;
 }
 
 #pragma mark -
@@ -36,22 +37,30 @@
 
 // Press recognizer should allow long press recognizer to work (but not the reverse)
 - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
-  return gestureRecognizer == self.pressRecognizer && otherGestureRecognizer == self.longPressRecognizer;
+  // We need to allow other external select gesture recognizers to run, but not
+  // the select recognizers for pressable subviews of the root view.
+
+  if (gestureRecognizer == self.pressRecognizer && otherGestureRecognizer == self.longPressRecognizer) {
+    return true;
+  } else {
+    return ![otherGestureRecognizer isKindOfClass:[RCTTVRemoteSelectGestureRecognizer class]];
+  }
 }
 
 #pragma mark -
 #pragma mark Private methods
 
 - (void)attachToView {
-  UILongPressGestureRecognizer *pressRecognizer = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(handlePress:)];
+  RCTTVRemoteSelectGestureRecognizer *pressRecognizer = [[RCTTVRemoteSelectGestureRecognizer alloc] initWithTarget:self action:@selector(handlePress:)];
   pressRecognizer.allowedPressTypes = @[ @(UIPressTypeSelect) ];
   pressRecognizer.minimumPressDuration = 0.0;
   pressRecognizer.delegate = self; // Press recognizer allows other recognizers to run
   
+
   [self.view addGestureRecognizer:pressRecognizer];
   self.pressRecognizer = pressRecognizer;
 
-  UILongPressGestureRecognizer *longPressRecognizer = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(handleLongPress:)];
+  RCTTVRemoteSelectGestureRecognizer *longPressRecognizer = [[RCTTVRemoteSelectGestureRecognizer alloc] initWithTarget:self action:@selector(handleLongPress:)];
   longPressRecognizer.allowedPressTypes = @[ @(UIPressTypeSelect) ];
   longPressRecognizer.minimumPressDuration = 0.5;
   longPressRecognizer.delegate = self;
@@ -119,3 +128,8 @@
 }
 
 @end
+
+
+@implementation RCTTVRemoteSelectGestureRecognizer
+
+@end
